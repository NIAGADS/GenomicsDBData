#!/usr/bin/env python
#pylint: disable=invalid-name
#pylint: disable=no-member
'''
Generates HGNC Gene Annotation Load File
'''

from __future__ import with_statement
from __future__ import print_function


import argparse
import os.path as path
import csv
import json


from GenomicsDBData.Util.utils import qw, warning, die, xstr


def build_evidence_json(row):
    '''
    build evidence json
    '''
    row = {key : value for key, value in row.iteritems() if value != ""}
    return json.dumps(row)


def generate_load_file():
    '''
    parse input file and generate load file
    '''

    fileName = path.join(args.dir, args.fileName)
    outputFile = path.join(args.dir, "hgnc_gene_annotation.csv")

    with open(outputFile, 'w') as of:
        with open(fileName) as f:
            reader = csv.DictReader(f, delimiter='\t')
            for row in reader:
                gene = row['ensembl_gene_id']
                if gene == '' or not gene:
                    continue

                evidence = build_evidence_json(row)

                print('\t'.join((gene, evidence)),
                               file=of)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="generate HGNC annotation load file")
    parser.add_argument('-f', '--fileName', help="file name", required=True)
    parser.add_argument('-d', '--dir', help="working directory", required=True)

    args = parser.parse_args()

    generate_load_file()

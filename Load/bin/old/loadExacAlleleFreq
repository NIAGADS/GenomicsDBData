#!/bin/bash

set -e # exit on error

FILE_PATH=/mnt/data/GenomicsDB/ADSP/annotation/external_resources/ExAC
ACCESSION=ExAC_AF

VCF_FILE=ExAC.r0.3.sites.vep.vcf.gz
PREPROCESS_FILE_PATH=${FILE_PATH}

NAME="ExAC: Allele Frequencies"
DESCRIPTION="Exome Aggregation Consortium (ExAC) allele frequencies and related annotations from unrelated individuals sequenced as part of various disease-specific and population genetic studies."
VERSION=0.3
DOWNLOAD_URL=ftp://ftp.broadinstitute.org/pub/ExAC_release/release0.3/
ID_URL=http://exac.broadinstitute.org/

POPULATION=false
LOAD_EXTERNAL_DATABASE=false
LOAD_DATA=false
PATCH=false
COMMIT=""
PREPROCESS=false
LOAD_TABLES=false

while [[ $# -gt 0 ]]
do

    key="$1"

    case $key in
	--loadXdbr)
	    LOAD_EXTERNAL_DATABASE=true
	    ;;
	--loadSupportingTables)
	    LOAD_TABLES=true
	    ;;
	--preprocess)
	    PREPROCESS=true
	    ;;
	--loadData)
	    LOAD_DATA=true
	    POPULATION="$2"
	    shift
	    ;;
	--runPatches)
	    PATCH=true
	    ;;
	--commit)
	    COMMIT="--commit"
	    ;;
	*)
            # unknown option
	    ;;
    esac
    shift # past argument or value
done


# create external database and external database release entries
if [ ${LOAD_EXTERNAL_DATABASE} = true ] ; then
    COMMENT="ga GUS::Supported::Plugin::InsertExternalDatabase --name \"${NAME}\"" 
    ga GUS::Supported::Plugin::InsertExternalDatabase --name "${NAME}" --comment "${COMMENT}" ${COMMIT}

    COMMENT="ga GUS::Supported::Plugin::InsertExternalDatabaseRls --databaseName \"${NAME}\" --databaseVersion \"${VERSION}\" --description \"${DESCRIPTION}\" --downloadUrl \"${DOWNLOAD_URL}\" --idUrl \"${ID_URL}\""
    ga GUS::Supported::Plugin::InsertExternalDatabaseRls --databaseName "${NAME}" --databaseVersion "${VERSION}" --description "${DESCRIPTION}"  --downloadUrl "${DOWNLOAD_URL}" --idUrl "${ID_URL}" --comment "${COMMENT}" ${COMMIT}
fi


if [ ${PREPROCESS} = true ] ; then
    echo "Extracting ExAC Allele Frequencies"
    POPULATIONS=(SAS FIN AFR AMR EAS OTH NFE Adj)
    for POP in "${POPULATIONS[@]}" 
    do
	echo "POPULATION: ${POP}"
	generateExacFreqLoadFile --dir ${FILE_PATH} -f ${VCF_FILE}  -p ${POP} --outputDir ${PREPROCESS_FILE_PATH}
    done
fi

if [ ${LOAD_DATA} = true ] ; then
    echo "Loading ExAC Allele Frequencies"
    EXTDBRLS="${NAME}|${VERSION}"
    ABBREVS=(SAS FIN AFR AMR EAS OTH NFE Adj)
    POPULATIONS=("South Asian" "Finnish" "African/African American" "Ad Mixed American/Latino" "East Asian" "Other ethnicity" "Non-Finnish European" "Global")
    for i in "${!POPULATIONS[@]}" 
    do
	if [ ${POPULATION} = "${ABBREVS[$i]}" ] || [ ${POPULATION} = "all" ] ; then
	    echo "Population: ${POPULATIONS[$i]}: ${ABBREVS[$i]}"
	
	    COMMENT="ga NiagadsData::Load::Plugin::InsertPopulationProtocolAppNode --population \"${POPULATIONS[$i]}\" --abbrev ${ABBREVS[$i]} --source ExAC_${ABBREVS[$i]} --description \"allele frequency calculated as the allele count (AC) divided by the chromosome count (AN) for the ${POPULATIONS[$i]} population; see http://exac.broadinstitute.org/faq\" --extDbRlsSpec \"${EXTDBRLS}\""
	    echo "Running ${COMMENT}"
	    ga NiagadsData::Load::Plugin::InsertPopulationProtocolAppNode --population "${POPULATIONS[$i]}" --abbrev ${ABBREVS[$i]} --source ExAC_${ABBREVS[$i]} --description "allele frequency calculated as the allele count (AC) divided by the chromosome count (AN) for the ${POPULATIONS[$i]} population; see http://exac.broadinstitute.org/faq" --extDbRlsSpec "${EXTDBRLS}" --comment "${COMMENT}" ${COMMIT} > load_population_${ABBREVS[$i]}.log 2>&1
	    
	    COMMENT="ga NiagadsData::Load::Plugin::InsertVariantAlleleFrequency --file ${PREPROCESS_FILE_PATH}/niagads_variantallelefrequency_exacfreq_${ABBREVS[$i]}.csv --extDbRlsSpec \"${EXTDBRLS}\" --population ${ABBREVS[$i]} --popExtDbRlsSpec \"${EXTDBRLS}\""
	    echo "Running ${COMMENT}"
	    ga NiagadsData::Load::Plugin::InsertVariantAlleleFrequency --file ${PREPROCESS_FILE_PATH}/niagads_variantallelefrequency_exacfreq_${ABBREVS[$i]}.csv --extDbRlsSpec "${EXTDBRLS}" --population ${ABBREVS[$i]} --popExtDbRlsSpec "${EXTDBRLS}"  --comment "${COMMENT}" ${COMMIT}  > load_exac_vaf_${ABBREVS[$i]}.log 2>&1
	fi
    done
fi

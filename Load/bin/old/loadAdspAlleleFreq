#!/bin/bash

set -e # exit on error

FILE_PATH=/mnt/data/GenomicsDB/ADSP/allele_frequency
# FILES=("wgs_validated_release_allelefreq.5122017.txt" "wes_release3_allelefreq.txt")
FILES=("wgs_validated_release_allelefreq.5122017.txt")
DATASETS=(WGS)
# DATASETS=(WGS WES)

NAME="ADSP Annotation WG File"
VERSION=AF
DESCRIPTION="Allele frequencies calculated using the --freq option of the vcftools (http://vcftools.sourceforge.net/) software package"

# assume extdb info is in from other loa

# PROTOCOL_NAME="ADSP Allele Frequency"
# PROTOCOL_DESCRIPTION=


LOAD_EXTERNAL_DATA=false
LOAD_DATA=false
GENERATE_LOAD_FILES=false
PREPROCESS=false
PATCH=false
COMMIT=""

while [[ $# -gt 0 ]]
do

    key="$1"

    case $key in
	--loadXdbr)
	    LOAD_EXTERNAL_DATABASE=true
	    ;;
	--loadData)
	    LOAD_DATA=true
	    ;;
	--runPatches)
	    PATCH=true
	    ;;
	--preprocess)
	    PREPROCESS=true
	    ;;
	--generateLoadFiles)
	    GENERATE_LOAD_FILES=true
	    ;;
	--commit)
	    COMMIT="--commit"
	    ;;
	*)
	    echo "Unknown option; exiting..."
            # unknown option
	    ;;
    esac
    shift # past argument or value
done


# create external database and external database release entries
if [ ${LOAD_EXTERNAL_DATABASE} = true ] ; then
  
    COMMENT="ga GUS::Supported::Plugin::InsertExternalDatabaseRls --databaseName \"${NAME}\" --databaseVersion \"${VERSION}\" --description \"${DESCRIPTION}\""
    ga GUS::Supported::Plugin::InsertExternalDatabaseRls --databaseName "${NAME}" --databaseVersion "${VERSION}" --description "${DESCRIPTION}" --comment "${COMMENT}" ${COMMIT}
fi

if [ ${GENERATE_LOAD_FILES} = true ] ; then
    for i in "${!DATASETS[@]}" 
    do
	echo "generating load file for ${DATASETS[$i]}"
	generateAdspAlleleFreqLoadFile_${DATASETS[$i]} --dir ${FILE_PATH} -f ${FILES[$i]} 
    done
fi

if [ ${LOAD_DATA} = true ] ; then
    echo "Creating Population ProtocolAppNode"
    POPULATION=Global

    DESCRIPTION="allele frequencies calculated across ADSP cohorts, which are ethnically diagnosed and comprised of individuals with or without an AD diagnosis and the presence or absence of known AD genetic risk factors"
    for i in "${!DATASETS[@]}"
    do

	POP_ABBREV=${DATASETS[$i]}

	COMMENT="ga NiagadsData::Load::Plugin::InsertPopulationProtocolAppNode --population \"${POPULATION}\" --abbrev ${POP_ABBREV} --source ADSP --description \"${DESCRIPTION}\" --extDbRlsSpec \"${NAME}|${VERSION}\""
	echo "Running ${COMMENT}"
	ga NiagadsData::Load::Plugin::InsertPopulationProtocolAppNode --population "${POPULATION}" --abbrev ${POP_ABBREV} --source ADSP --description "${DESCRIPTION}" --extDbRlsSpec "${NAME}|${VERSION}" --comment "${COMMENT}" ${COMMIT} > insert_population_pan_${POP_ABBREV}.log 2>&1

	echo "Loading AlleleFreq data"
  
	COMMENT="ga NiagadsData::Load::Plugin::InsertVariantAlleleFrequency --file ${FILE_PATH}/niagads_variantallelefrequency_adsp_${DATASETS[$i]}.csv --extDbRlsSpec \"${NAME}|${VERSION}\" --population ${POP_ABBREV} --popExtDbRlsSpec \"${NAME}|${VERSION}\" --checkAltVariantIds"
    echo "Running ${COMMENT}"
    ga NiagadsData::Load::Plugin::InsertVariantAlleleFrequency --file ${FILE_PATH}/niagads_variantallelefrequency_adsp_${DATASETS[$i]}.csv --extDbRlsSpec "${NAME}|${VERSION}" --population ${POP_ABBREV} --popExtDbRlsSpec "${NAME}|${VERSION}" --checkAltVariantIds  --comment "${COMMENT}" ${COMMIT}  > load_vaf_${DATASETS[$i]}.log 2>&1
    done
    


fi

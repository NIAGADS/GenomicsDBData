#!/usr/bin/perl

# For GeneDB GFF, We need to compensate limitiations in Bioperl 1.4, and also do some regular unpacking.
# replace '=' with space
# add quotes around each attribute value
# convert hex characters to ascii
# remove '.\d+' from end of ensembl/vega/havanna ids
# replace transcript feature with contents of transcript_type field

## usage: preprocessIsfGff file.gff  > processed.gff

use lib "$ENV{GUS_HOME}/lib/perl";
use strict;
use Getopt::Long;
use Bio::SeqIO;
use File::Basename;
use Data::Dumper;

my $inputGff = $ARGV[0];
my $outputGff = $ARGV[1];

open(IN,"$inputGff");
open(OUT, ">", "$outputGff");

my  %features = (gene => 1,
		 transcript => 1,
		 exon => 1,
		 five_prime_UTR => 1,
		 three_prime_UTR => 1);

foreach my $line (<IN>) {
  $line =~ s/\cM//g;
  
  if (!($line =~ /^\#/) && !($line =~ /^\s+$/)) {
    chomp($line);
    my (@cols) = split(/\t/,$line);

    $cols[0] =~ s/\;$//;
    $cols[0] =~ s/\s+$//;
    $cols[0] =~ s/^\s+//;

    # die Dumper(@cols);
    my $featureType = $cols[2];

    next if (!exists $features{$featureType});
    
    $cols[8] =~ s/stop_codon_redefined_as_selenocysteine=stop_codon_redefined_as_selenocysteine;/stop_codon_redefined_as_selenocysteine=;/;
    $cols[8] =~ s/stop_codon_redefined_as_selenocysteine;/stop_codon_redefined_as_selenocysteine=;/;
    $cols[8] =~ s/isFminPartial;/isFminPartial=;/;
    $cols[8] =~ s/isFmaxPartial;/isFmaxPartial=;/;

    $cols[8] =~ s/=/\$\$\"/g;

    $cols[8] =~ s/\"\"/\"/g;

    $cols[8] =~ s/;/\";/g;

    $cols[8] .= "\"" if (!($cols[8] =~ /\"$/ || $cols[8] =~ /\";$/));

    my (@tags) = split(/\;/,$cols[8]);

    $cols[8] =~ s/\%([A-Fa-f0-9]{2})/pack('C', hex($1))/seg;

    my $tagsFixed;
    my $id;
    my $flag = 0;

    foreach my $tag (@tags) {
      #	print "$tag\n";
      $tag =~ s/\%([A-Fa-f0-9]{2})/pack('C', hex($1))/seg;
      my ($tagname,$value)=split(/\$\$/,$tag);
      if ($tagname =~ /_id|ID|Parent|ccdsid|havana_gene|havana_transcript/) {
	if ($value =~ /:/) {
	  $value =~ s/\.\d+\:/:/;
	}
	else {
	  $value =~  s/\.\d+\"$/\"/;
	}
      }

      $tagsFixed .= "$tagname $value;";
    }

    $cols[8] = $tagsFixed;
    my $fixed = join("\t",@cols);

    print OUT "$fixed\n";
  }
}

close(IN);

#!/usr/bin/env python3

"""
convert tab delimited text file to gusXML file
assume column names = fields
prints converted file to STDOUT
"""

from __future__ import print_function
from __future__ import with_statement

import argparse

from GenomicsDBData.Util.utils import xstr, die, warning

def parse_tab_delim_file(fileName):
    ''' 
    parse tab delim file and build 
    one record (dict) for each row
    '''

    tRecords = {}
    recordCount = 0
    with open(fileName, 'r') as f:
        fields = None
        for line in f:
            if fields is None:
                header = line.rstrip()
                fields = header.split('\t')
                continue

            recordCount = recordCount + 1
            tRecords[recordCount] = {}

            values = line.rstrip('\n').split('\t')
            # warning(values)
            for i, field in enumerate(fields):
                # warning(recordCount, i, field, values[i])
                tRecords[recordCount][field] = values[i]

    return tRecords


def print_record(record, table):
    '''
    print xml block
    '''

    print('<' + table + '>')

    for field in record:
        if record[field] is not None and record[field] != '':
            print('\t<' + field + '>' + xstr(record[field]) + '</' + field + '>')

    print('</' + table + '>')


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-i', '--inputFile',
                        help="The tab-delimited text input file",
                        required=True)
    parser.add_argument('-t', '--table',
                        help="GUS table in SCHEMA::TABLE format",
                        required=True)

    args = parser.parse_args()

    records = parse_tab_delim_file(args.inputFile)

    for r in records.values():
        print_record(r, args.table)
